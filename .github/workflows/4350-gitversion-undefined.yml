name: Issue 4350 repro

on:
  push:
    branches:
      - example-undefined

jobs:
  dotnet-gitversion:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Install GitVersion.Tool
        run: |
          dotnet tool install --global GitVersion.Tool --version 6.0.5

      - name: Show GitVersion config
        run: dotnet gitversion -config GitVersion.yml -showconfig

      - name: Execute GitVersion and generate summary
        run: |
          OUTPUT=$(dotnet-gitversion -config GitVersion.yml -output json)
          echo "$OUTPUT"

          {
            echo "| Variable | Output |"
            echo "| :--- | :--- |"
            echo "$OUTPUT" | jq -r 'to_entries | sort_by(.key) | .[] | "| \(.key) | \(.value) |"'
          } >> $GITHUB_STEP_SUMMARY

  gittools-action:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
          versionSpec: '6.0.5'

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Generate summary
        run: |
          # Convert GitVersion outputs to JSON
          {
            echo '{'
            env | grep "GITVERSION_" | sort | while IFS='=' read -r key value; do
              clean_key="${key#GITVERSION_}"
              # Add comma for all except last line
              if [ "$(env | grep -c "GITVERSION_")" -eq 1 ]; then
                echo "\"$clean_key\": \"$value\""
              else
                echo "\"$clean_key\": \"$value\","
              fi
            done
            echo '}'
          } > gitversion.json

          {
            echo "| Variable | Output |"
            echo "| :--- | :--- |"
            cat gitversion.json | jq -r 'to_entries | sort_by(.key) | .[] | "| \(.key) | \(.value) |"'
          } >> $GITHUB_STEP_SUMMARY
